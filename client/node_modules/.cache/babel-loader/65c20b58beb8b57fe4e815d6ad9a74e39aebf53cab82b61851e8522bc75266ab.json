{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cookj\\\\Documents\\\\Web development\\\\Tristan-D-Amours-portfolio\\\\client\\\\src\\\\components\\\\LanguageToggleProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\n\n// Declare renamed variable using react function createContext.\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LanguageToggleContext = /*#__PURE__*/createContext();\n\n// Purpose of the language toggle provider is to allow components to render conditionally in English or French based on the language state.\nconst LanguageToggleProvider = ({\n  children\n}) => {\n  _s();\n  // Language state is either a string of \"en\" for English or \"fr\" for French.\n  const [language, setLanguage] = useState(\"en\");\n\n  // Function sets language to french, which will\n  const handleFrench = e => {\n    setLanguage(\"fr\");\n  };\n  const handleEnglish = e => {\n    setLanguage(\"en\");\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageToggleContext.Provider, {\n    value: {\n      language,\n      handleEnglish,\n      handleFrench\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 21,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageToggleProvider, \"JgNS4s3wc06/6u6z+Ak7Ai5ELN8=\");\n_c = LanguageToggleProvider;\nexport default LanguageToggleProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageToggleProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","LanguageToggleContext","LanguageToggleProvider","children","_s","language","setLanguage","handleFrench","e","handleEnglish","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cookj/Documents/Web development/Tristan-D-Amours-portfolio/client/src/components/LanguageToggleProvider.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\n// Declare renamed variable using react function createContext.\r\nexport const LanguageToggleContext = createContext();\r\n\r\n// Purpose of the language toggle provider is to allow components to render conditionally in English or French based on the language state.\r\nconst LanguageToggleProvider = ({ children }) => {\r\n  // Language state is either a string of \"en\" for English or \"fr\" for French.\r\n  const [language, setLanguage] = useState(\"en\");\r\n\r\n  // Function sets language to french, which will\r\n  const handleFrench = (e) => {\r\n    setLanguage(\"fr\");\r\n  };\r\n\r\n  const handleEnglish = (e) => {\r\n    setLanguage(\"en\");\r\n  };\r\n\r\n  return (\r\n    <LanguageToggleContext.Provider\r\n      value={{ language, handleEnglish, handleFrench }}\r\n    >\r\n      {children}\r\n    </LanguageToggleContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LanguageToggleProvider;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;;AAE/C;AAAA,SAAAC,MAAA,IAAAC,OAAA;AACA,OAAO,MAAMC,qBAAqB,gBAAGJ,aAAa,CAAC,CAAC;;AAEpD;AACA,MAAMK,sBAAsB,GAAGA,CAAC;EAAEC;AAAS,CAAC,KAAK;EAAAC,EAAA;EAC/C;EACA,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGR,QAAQ,CAAC,IAAI,CAAC;;EAE9C;EACA,MAAMS,YAAY,GAAIC,CAAC,IAAK;IAC1BF,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMG,aAAa,GAAID,CAAC,IAAK;IAC3BF,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEN,OAAA,CAACC,qBAAqB,CAACS,QAAQ;IAC7BC,KAAK,EAAE;MAAEN,QAAQ;MAAEI,aAAa;MAAEF;IAAa,CAAE;IAAAJ,QAAA,EAEhDA;EAAQ;IAAAS,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACqB,CAAC;AAErC,CAAC;AAACX,EAAA,CApBIF,sBAAsB;AAAAc,EAAA,GAAtBd,sBAAsB;AAsB5B,eAAeA,sBAAsB;AAAC,IAAAc,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}