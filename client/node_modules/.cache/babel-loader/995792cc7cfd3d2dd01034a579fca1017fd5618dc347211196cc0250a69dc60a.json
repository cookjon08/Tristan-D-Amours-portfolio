{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\cookj\\\\Documents\\\\Web development\\\\Tristan-D-Amours-portfolio\\\\client\\\\src\\\\components\\\\LanguageToggleProvider.js\",\n  _s = $RefreshSig$();\nimport { createContext, useState } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport const LanguageToggleContext = /*#__PURE__*/createContext();\nconst LanguageToggleProvider = () => {\n  _s();\n  const [language, setLanguage] = useState(\"en\");\n  const handleFrench = e => {\n    setLanguage(\"fr\");\n  };\n  const handleEnglish = e => {\n    setLanguage(\"en\");\n  };\n  return /*#__PURE__*/_jsxDEV(LanguageToggleContext.Provider, {\n    value: {\n      language,\n      handleEnglish,\n      handleFrench\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 17,\n    columnNumber: 5\n  }, this);\n};\n_s(LanguageToggleProvider, \"JgNS4s3wc06/6u6z+Ak7Ai5ELN8=\");\n_c = LanguageToggleProvider;\nexport default LanguageToggleProvider;\nvar _c;\n$RefreshReg$(_c, \"LanguageToggleProvider\");","map":{"version":3,"names":["createContext","useState","jsxDEV","_jsxDEV","LanguageToggleContext","LanguageToggleProvider","_s","language","setLanguage","handleFrench","e","handleEnglish","Provider","value","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["C:/Users/cookj/Documents/Web development/Tristan-D-Amours-portfolio/client/src/components/LanguageToggleProvider.js"],"sourcesContent":["import { createContext, useState } from \"react\";\r\n\r\nexport const LanguageToggleContext = createContext();\r\n\r\nconst LanguageToggleProvider = () => {\r\n  const [language, setLanguage] = useState(\"en\");\r\n\r\n  const handleFrench = (e) => {\r\n    setLanguage(\"fr\");\r\n  };\r\n\r\n  const handleEnglish = (e) => {\r\n    setLanguage(\"en\");\r\n  };\r\n\r\n  return (\r\n    <LanguageToggleContext.Provider\r\n      value={{ language, handleEnglish, handleFrench }}\r\n    ></LanguageToggleContext.Provider>\r\n  );\r\n};\r\n\r\nexport default LanguageToggleProvider;\r\n"],"mappings":";;AAAA,SAASA,aAAa,EAAEC,QAAQ,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEhD,OAAO,MAAMC,qBAAqB,gBAAGJ,aAAa,CAAC,CAAC;AAEpD,MAAMK,sBAAsB,GAAGA,CAAA,KAAM;EAAAC,EAAA;EACnC,MAAM,CAACC,QAAQ,EAAEC,WAAW,CAAC,GAAGP,QAAQ,CAAC,IAAI,CAAC;EAE9C,MAAMQ,YAAY,GAAIC,CAAC,IAAK;IAC1BF,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,MAAMG,aAAa,GAAID,CAAC,IAAK;IAC3BF,WAAW,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,oBACEL,OAAA,CAACC,qBAAqB,CAACQ,QAAQ;IAC7BC,KAAK,EAAE;MAAEN,QAAQ;MAAEI,aAAa;MAAEF;IAAa;EAAE;IAAAK,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OAClB,CAAC;AAEtC,CAAC;AAACX,EAAA,CAhBID,sBAAsB;AAAAa,EAAA,GAAtBb,sBAAsB;AAkB5B,eAAeA,sBAAsB;AAAC,IAAAa,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}